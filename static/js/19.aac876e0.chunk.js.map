{"version":3,"sources":["pages/Gallery/Gallery.js","pages/Gallery/index.js","pages/Gallery/Gallery.module.css"],"names":["Gallery","useState","instaMedia","setInstaMedia","isLoading","setIsLoading","error","setError","fetchMediaHandler","useCallback","a","fetch","process","response","ok","Error","json","media","mediaWithoutVideos","data","filter","d","media_type","message","useEffect","content","length","map","i","LightboxImage","imgSrc","media_url","imgAlt","caption","title","gallery","id","className","classes","galleryFlex","module","exports"],"mappings":"mMA0EeA,EApEC,WACd,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAoBC,sBAAW,sBAAC,gCAAAC,EAAA,6DACpCL,GAAa,GACbE,GAAS,GAF2B,kBAKXI,MAAM,4FAAD,OACkEC,kJAN5D,WAK5BC,EAL4B,QAQpBC,GARoB,sBAS1B,IAAIC,MAAM,yBATgB,wBAWdF,EAASG,OAXK,QAW5BC,EAX4B,OAY5BC,EAAqBD,EAAME,KAAKC,QACpC,SAACC,GAAD,MAAwB,UAAjBA,EAAEC,cAEXnB,EAAce,GAfoB,kDAiBlCX,EAAS,KAAMgB,SAjBmB,QAmBpClB,GAAa,GAnBuB,0DAoBnC,IAEHmB,qBAAU,WACRhB,MACC,CAACA,IAEJ,IAAIiB,EACF,4BACE,8CA4BJ,OAxBIvB,EAAWwB,OAAS,IACtBD,EAAUvB,EAAWyB,KAAI,SAACC,GAAD,OACvB,cAACC,EAAA,EAAD,CAEEC,OAAQF,EAAEG,UACVC,OAAQJ,EAAEK,QACVC,MAAON,EAAEK,QACTE,SAAS,GAJJP,EAAEQ,QAST9B,IACFmB,EAAU,4BAAInB,KAGZF,IACFqB,EACE,4BACE,2CAMJ,qBAAK,cAAY,mBAAjB,SACE,qBAAKY,UAAWC,IAAQC,YAAxB,SAAsCd,OCpE7BzB,a,mBCAfwC,EAAOC,QAAU,CAAC,YAAc,6BAA6B,KAAO","file":"static/js/19.aac876e0.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport LightboxImage from \"../../components/common/LightboxImage\";\r\nimport classes from \"./Gallery.module.css\";\r\n\r\nimport { Trans } from \"@lingui/macro\";\r\n\r\nconst Gallery = () => {\r\n  const [instaMedia, setInstaMedia] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchMediaHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(false);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://graph.instagram.com/me/media?fields=id,caption,media_url,media_type&access_token=${process.env.REACT_APP_LONG_LIVED_ACCESS_TOKEN}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const media = await response.json();\r\n      const mediaWithoutVideos = media.data.filter(\r\n        (d) => d.media_type !== \"VIDEO\"\r\n      );\r\n      setInstaMedia(mediaWithoutVideos);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMediaHandler();\r\n  }, [fetchMediaHandler]);\r\n\r\n  let content = (\r\n    <p>\r\n      <Trans>Fant ingen bilder</Trans>\r\n    </p>\r\n  );\r\n\r\n  if (instaMedia.length > 0) {\r\n    content = instaMedia.map((i) => (\r\n      <LightboxImage\r\n        key={i.id}\r\n        imgSrc={i.media_url}\r\n        imgAlt={i.caption}\r\n        title={i.caption}\r\n        gallery={true}\r\n      />\r\n    ));\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = (\r\n      <p>\r\n        <Trans>Laster inn...</Trans>\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div uk-lightbox=\"animation: slide\">\r\n      <div className={classes.galleryFlex}>{content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import Gallery from \"./Gallery\";\r\nexport default Gallery;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"galleryFlex\":\"Gallery_galleryFlex__1Gr9Q\",\"flex\":\"Gallery_flex__2xW7U\"};"],"sourceRoot":""}