{"version":3,"sources":["components/common/LightboxImage/LightboxImage.js","components/common/LightboxImage/index.js","pages/Gallery.js"],"names":["LightboxImage","imgSrc","imgAlt","title","group","gallery","href","className","height","src","alt","Gallery","useState","instaMedia","setInstaMedia","isLoading","setIsLoading","error","setError","fetchMediaHandler","useCallback","a","fetch","process","response","ok","Error","json","media","mediaWithoutVideos","data","filter","d","media_type","message","useEffect","content","length","map","i","media_url","caption","id"],"mappings":"mIA6BeA,MA3Bf,YAA2E,IAAlDC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAA0B,IAAnBC,QACrD,YADwE,SAGpE,mBACEC,KAAML,EACN,gBAAeG,EACf,aAAYD,EACZI,UAAU,YAJZ,SAOE,cAAC,IAAD,CAAUC,OAAO,QAAjB,SACE,qBAAKD,UAAU,QAAf,SACE,qBAAKE,IAAKR,EAAQS,IAAKR,EAAQK,UAAU,sBAO/C,mBAAGD,KAAML,EAAQ,gBAAeG,EAAO,aAAYD,EAAnD,SACE,qBAAKM,IAAKR,EAAQS,IAAKR,OCrBhBF,O,kGCiEAW,UA/Df,WACE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAoBC,sBAAW,sBAAC,gCAAAC,EAAA,6DACpCL,GAAa,GACbE,GAAS,GAF2B,kBAKXI,MAAM,4FAAD,OACkEC,+IAN5D,WAK5BC,EAL4B,QAQpBC,GARoB,sBAS1B,IAAIC,MAAM,yBATgB,wBAWdF,EAASG,OAXK,QAW5BC,EAX4B,OAY5BC,EAAqBD,EAAME,KAAKC,QACpC,SAACC,GAAD,MAAwB,UAAjBA,EAAEC,cAEXnB,EAAce,GAfoB,kDAiBlCX,EAAS,KAAMgB,SAjBmB,QAmBpClB,GAAa,GAnBuB,0DAoBnC,IAEHmB,qBAAU,WACRhB,MACC,CAACA,IAEJ,IAAIiB,EAAU,kDAyBd,OAvBIvB,EAAWwB,OAAS,IACtBD,EAAUvB,EAAWyB,KAAI,SAACC,GACxB,OACE,cAAC,IAAD,CAEEtC,OAAQsC,EAAEC,UACVtC,OAAQqC,EAAEE,QACVtC,MAAOoC,EAAEE,QACTrC,MAAM,UACNC,SAAS,GALJkC,EAAEG,QAWXzB,IACFmB,EAAU,4BAAInB,KAGZF,IACFqB,EAAU,+CAIV,mCACE,qBAAK7B,UAAU,eAAf,SAA+B6B","file":"static/js/8.4b1ed244.chunk.js","sourcesContent":["import LazyLoad from \"react-lazyload\";\r\n\r\nfunction LightboxImage({ imgSrc, imgAlt, title, group, gallery = false }) {\r\n  if (gallery) {\r\n    return (\r\n      <a\r\n        href={imgSrc}\r\n        data-lightbox={group}\r\n        data-title={title}\r\n        className=\"list-item\"\r\n      >\r\n        {/* offset={10} Start å rendre 10px før bildet kommer i viewport */}\r\n        <LazyLoad height=\"300px\">\r\n          <div className=\"frame\">\r\n            <img src={imgSrc} alt={imgAlt} className=\"gallery-img\" />\r\n          </div>\r\n        </LazyLoad>\r\n      </a>\r\n    );\r\n  } else {\r\n    return (\r\n      <a href={imgSrc} data-lightbox={group} data-title={title}>\r\n        <img src={imgSrc} alt={imgAlt} />\r\n      </a>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default LightboxImage;\r\n","import LightboxImage from './LightboxImage'\r\nexport default LightboxImage","import { useCallback, useEffect, useState } from \"react\";\r\nimport LightboxImage from \"../components/common/LightboxImage\";\r\n\r\nfunction Gallery() {\r\n  const [instaMedia, setInstaMedia] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchMediaHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(false);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://graph.instagram.com/me/media?fields=id,caption,media_url,media_type&access_token=${process.env.REACT_APP_LONG_LIVED_ACCESS_TOKEN}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const media = await response.json();\r\n      const mediaWithoutVideos = media.data.filter(\r\n        (d) => d.media_type !== \"VIDEO\"\r\n      );\r\n      setInstaMedia(mediaWithoutVideos);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMediaHandler();\r\n  }, [fetchMediaHandler]);\r\n\r\n  let content = <p>Fant ingen bilder</p>;\r\n\r\n  if (instaMedia.length > 0) {\r\n    content = instaMedia.map((i) => {\r\n      return (\r\n        <LightboxImage\r\n          key={i.id}\r\n          imgSrc={i.media_url}\r\n          imgAlt={i.caption}\r\n          title={i.caption}\r\n          group=\"gallery\"\r\n          gallery={true}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Laster inn...</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gallery-flex\">{content}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Gallery;"],"sourceRoot":""}