{"version":3,"sources":["components/common/LightboxImage/LightboxImage.module.css","components/common/LightboxImage/LightboxImage.js","components/common/LightboxImage/index.js","pages/Gallery/Gallery.module.css","pages/Gallery/Gallery.js","pages/Gallery/index.js"],"names":["module","exports","LightboxImage","imgSrc","imgWidth","imgHeight","imgAlt","title","gallery","href","data-caption","className","classes","listItem","height","frame","width","src","alt","galleryImg","data-type","Gallery","useState","instaMedia","setInstaMedia","isLoading","setIsLoading","error","setError","fetchMediaHandler","useCallback","a","fetch","process","response","ok","Error","json","media","mediaWithoutVideos","data","filter","d","media_type","message","useEffect","content","length","map","i","media_url","caption","id","uk-lightbox","galleryFlex"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,SAAW,gCAAgC,gBAAkB,uCAAuC,SAAW,gCAAgC,WAAa,kCAAkC,MAAQ,+B,6ECqCzMC,MAnCf,YAOI,IANFC,EAMC,EANDA,OACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,MAEC,IADDC,QAEA,YADC,SAGG,mBAAGC,KAAMN,EAAQO,eAAcH,EAAOI,UAAWC,IAAQC,SAAzD,SACE,cAAC,IAAD,CAAUC,OAAQ,IAAlB,SACE,qBAAKH,UAAWC,IAAQG,MAAxB,SAEE,qBACED,OAAQ,IACRE,MAAO,IACPC,IAAKd,EACLe,IAAKZ,EACLK,UAAWC,IAAQO,mBAS3B,aADA,CACA,KAAGV,KAAMN,EAAQO,eAAcH,EAAOa,YAAU,QAAhD,SACE,qBAAKH,IAAKd,EAAQa,MAAOZ,EAAUU,OAAQT,EAAWa,IAAKZ,OC/BpDJ,O,mBCAfF,EAAOC,QAAU,CAAC,YAAc,6BAA6B,KAAO,wB,mHCiErDoB,MA9Df,WAAoB,IAAD,EACmBC,mBAAS,IAD5B,mBACVC,EADU,KACEC,EADF,OAEiBF,oBAAS,GAF1B,mBAEVG,EAFU,KAECC,EAFD,OAGSJ,oBAAS,GAHlB,mBAGVK,EAHU,KAGHC,EAHG,KAKXC,EAAoBC,sBAAW,sBAAC,gCAAAC,EAAA,6DACpCL,GAAa,GACbE,GAAS,GAF2B,kBAKXI,MAAM,4FAAD,OACkEC,kJAN5D,WAK5BC,EAL4B,QAQpBC,GARoB,sBAS1B,IAAIC,MAAM,yBATgB,wBAWdF,EAASG,OAXK,QAW5BC,EAX4B,OAY5BC,EAAqBD,EAAME,KAAKC,QACpC,SAACC,GAAD,MAAwB,UAAjBA,EAAEC,cAEXnB,EAAce,GAfoB,kDAiBlCX,EAAS,KAAMgB,SAjBmB,QAmBpClB,GAAa,GAnBuB,0DAoBnC,IAEHmB,qBAAU,WACRhB,MACC,CAACA,IAEJ,IAAIiB,EAAU,kDAwBd,OAtBIvB,EAAWwB,OAAS,IACtBD,EAAUvB,EAAWyB,KAAI,SAACC,GACxB,OACE,cAAC/C,EAAA,EAAD,CAEEC,OAAQ8C,EAAEC,UACV5C,OAAQ2C,EAAEE,QACV5C,MAAO0C,EAAEE,QACT3C,SAAS,GAJJyC,EAAEG,QAUXzB,IACFmB,EAAU,4BAAInB,KAGZF,IACFqB,EAAU,+CAIV,qBAAKO,cAAY,mBAAjB,SACE,qBAAK1C,UAAWC,IAAQ0C,YAAxB,SAAsCR,OC5D7BzB","file":"static/js/13.0fe24749.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lightbox\":\"LightboxImage_lightbox__2tWSq\",\"lightboxOverlay\":\"LightboxImage_lightboxOverlay__3xZna\",\"listItem\":\"LightboxImage_listItem__2xjM9\",\"galleryImg\":\"LightboxImage_galleryImg__3HnY9\",\"frame\":\"LightboxImage_frame__1wFUK\"};","import LazyLoad from \"react-lazyload\";\r\nimport classes from \"./LightboxImage.module.css\";\r\n\r\nfunction LightboxImage({\r\n  imgSrc,\r\n  imgWidth,\r\n  imgHeight,\r\n  imgAlt,\r\n  title,\r\n  gallery = false,\r\n}) {\r\n  if (gallery) {\r\n    return (\r\n      <a href={imgSrc} data-caption={title} className={classes.listItem}>\r\n        <LazyLoad height={300}>\r\n          <div className={classes.frame}>\r\n            {/* 340 width er kun et estimat */}\r\n            <img\r\n              height={300}\r\n              width={340}\r\n              src={imgSrc}\r\n              alt={imgAlt}\r\n              className={classes.galleryImg}\r\n            />\r\n          </div>\r\n        </LazyLoad>\r\n      </a>\r\n    );\r\n  } else {\r\n    return (\r\n      // data-type=\"image\" er n√∏dvendig for at UIkit lightbox alltid skal funke\r\n      <a href={imgSrc} data-caption={title} data-type=\"image\">\r\n        <img src={imgSrc} width={imgWidth} height={imgHeight} alt={imgAlt} />\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LightboxImage;\r\n","import LightboxImage from './LightboxImage'\r\nexport default LightboxImage","// extracted by mini-css-extract-plugin\nmodule.exports = {\"galleryFlex\":\"Gallery_galleryFlex__1Gr9Q\",\"flex\":\"Gallery_flex__2xW7U\"};","import { useCallback, useEffect, useState } from \"react\";\r\nimport LightboxImage from \"../../components/common/LightboxImage\";\r\nimport classes from \"./Gallery.module.css\";\r\n\r\nfunction Gallery() {\r\n  const [instaMedia, setInstaMedia] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchMediaHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(false);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://graph.instagram.com/me/media?fields=id,caption,media_url,media_type&access_token=${process.env.REACT_APP_LONG_LIVED_ACCESS_TOKEN}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const media = await response.json();\r\n      const mediaWithoutVideos = media.data.filter(\r\n        (d) => d.media_type !== \"VIDEO\"\r\n      );\r\n      setInstaMedia(mediaWithoutVideos);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMediaHandler();\r\n  }, [fetchMediaHandler]);\r\n\r\n  let content = <p>Fant ingen bilder</p>;\r\n\r\n  if (instaMedia.length > 0) {\r\n    content = instaMedia.map((i) => {\r\n      return (\r\n        <LightboxImage\r\n          key={i.id}\r\n          imgSrc={i.media_url}\r\n          imgAlt={i.caption}\r\n          title={i.caption}\r\n          gallery={true}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Laster inn...</p>;\r\n  }\r\n\r\n  return (\r\n    <div uk-lightbox=\"animation: slide\">\r\n      <div className={classes.galleryFlex}>{content}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import Gallery from \"./Gallery\";\r\nexport default Gallery;\r\n"],"sourceRoot":""}